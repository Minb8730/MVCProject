<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
			"-//mybatis.org//DTD Mapper 3.0//EN" 
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
			
<mapper namespace="com.itbank.member.MemberDAO">


	<select id="customerLastList" resultType="member" parameterType="hashmap">
		select * from member
			where member_deleted = 'n'
				<if test="keyword!=null and keyword.equals('')==false">
		  	 		and ${search} like '%${keyword}%'
		 	 	</if>
  	 	order by 
			amount_last desc
		offset ${offset} rows
	 		fetch first ${perPage} rows only
	</select>


	<select id="customerThisList" resultType="member" parameterType="hashmap">
		select * from member
			where member_deleted = 'n'
				<if test="keyword!=null and keyword.equals('')==false">
		  	 		and ${search} like '%${keyword}%'
		 	 	</if>
  	 	order by 
			amount_this desc
		offset ${offset} rows
	 		fetch first ${perPage} rows only
	</select>

	<select id="customerDateList" resultType="member" parameterType="hashmap">
		select * from member
			where member_deleted = 'n'
				<if test="keyword!=null and keyword.equals('')==false">
		  	 		and ${search} like '%${keyword}%'
		 	 	</if>
  	 	order by 
			member_date desc
		offset ${offset} rows
	 		fetch first ${perPage} rows only
	</select>

		<select id="customerGradeList" resultType="member" parameterType="hashmap">
		select * from member
			where member_deleted = 'n'
				<if test="keyword!=null and keyword.equals('')==false">
		  	 		and ${search} like '%${keyword}%'
		 	 	</if>
  	 	order by decode(member_grade, 'P', 1, 'G', 2, 'V', 3, 'N', 4) asc, member_date desc
		offset ${offset} rows
	 		fetch first ${perPage} rows only
	</select>
	



	<insert id="insert" parameterType="member">
	insert into member(
   		 member_number, member_email, member_name, member_password, member_nick, member_phone, member_addr1, member_addr2,  member_gender   
		)
	values(
   		 #{member_number} || to_char(member_seq.nextval,'FM00000'), #{member_email}, #{member_name}, #{member_password}, #{member_nick}, #{member_phone}, #{member_addr1}, #{member_addr2} , #{member_gender}
		)
	
	</insert>
	
	
	<select id="selectOne" resultType="member" parameterType="member">
	select * from member
		where
			member_email = #{member_email}
			and
			member_password = #{member_password}
			and
			member_deleted = 'n'
	
	</select>
	
	<select id="selectOne2" resultType="member" parameterType="member">
	select * from member
		where
			member_email = #{member_email}
			and
			member_deleted = 'n'

	</select>
	
	
	<update id="modify" parameterType="member">	
		update member set
			member_nick = #{member_nick},
			member_phone = #{member_phone},
			member_addr1 = #{member_addr1},
			member_addr2 = #{member_addr2},
			member_gender = #{member_gender}
		where
			member_email = #{member_email}
	</update>

</mapper>





